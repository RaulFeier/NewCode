Olympus City recently launched the production of personal starships. Now everyone on Mars can buy one and fly to other planets inexpensively.

Each starship has a number —some positive integer x
. Let's define the luckiness of a number x as the difference between the largest and smallest digits of that number. For example, 142857 has 8 as its largest digit and 1 as its smallest digit, so its luckiness is 8−1=7. And the number 111 has all digits equal to 1

, so its luckiness is zero.

Hateehc is a famous Martian blogger who often flies to different corners of the solar system. To release interesting videos even faster, he decided to buy himself a starship. When he came to the store, he saw starships with numbers from l
to r

inclusively. While in the store, Hateehc wanted to find a starship with the unluckiest number.

Since there are a lot of starships in the store, and Hateehc can't program, you have to help the blogger and write a program that answers his question.

Input

The first line contains an integer t
(1≤t≤600) —the number of test cases.

Each of the following t
lines contains a description of the test case. The description consists of two integers l, r (1≤l≤r≤10^18) — the largest and smallest numbers of the starships in the store.

Output

Print t

lines, one line for each test case, containing the unluckiest starship number in the store.

If there are several ways to choose the unluckiest number, output any of them.

example

Input
5
59 63
42 49
48 53
90 90
1 100

Output
63
44
53
90
1
